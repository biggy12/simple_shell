#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <errno.h>

#define PROMPT "$ "

int main() {
  char command[1024];

  // Display the prompt and wait for the user to type a command.
  printf(PROMPT);
  fflush(stdout);
  fgets(command, sizeof(command), stdin);

  // Check if the user has pressed Ctrl+D.
  if (feof(stdin)) {
    printf("\n");
    exit(EXIT_SUCCESS);
  }

  // Remove the newline character from the command.
  command[strcspn(command, "\n")] = '\0';

  // Try to find the executable for the command.
  char *executable = getenv("PATH");
  while (executable != NULL) {
    char *path = strtok(executable, ":");
    executable = strtok(NULL, ":");

    char full_path[1024];
    snprintf(full_path, sizeof(full_path), "%s/%s", path, command);

    if (access(full_path, X_OK) == 0) {
      // The executable has been found.
      execve(full_path, NULL, environ);
      break;
    }
  }

  // If the executable was not found, print an error message.
  if (executable == NULL) {
    printf("Command '%s' not found.\n", command);
  }

  // Display the prompt again.
  printf(PROMPT);

  return EXIT_SUCCESS;
}
